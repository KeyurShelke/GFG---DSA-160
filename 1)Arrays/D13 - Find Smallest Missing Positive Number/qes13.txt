 Find Smallest Missing Positive Number

 Given an unsorted array arr[] with both positive and negative elements, 
 the task is to find the smallest positive number missing from the array.

Note: You can modify the original array.

Examples:

Input: arr[] = {2, -3, 4, 1, 1, 7}
Output: 3
Explanation: 3 is the smallest positive number missing from the array.

Input: arr[] = {5, 3, 2, 5, 1}
Output: 4
Explanation: 4 is the smallest positive number missing from the array.

Input: arr[] = {-8, 0, -1, -4, -3}
Output: 1
Explanation: 1 is the smallest positive number missing from the array.

Table of Content

[Naive approach] By Sorting - O(n*log n) Time and O(n) Space
[Better approach] Using Visited Array - O(n) Time and O(n) Space
[Expected Approach] Using Cycle Sort - O(n) Time and O(1) Space
[Alternate Approach] By Negating Array Elements – O(n) Time and O(1) Space
[Alternate Approach] By Marking Indices – O(n) Time and O(1) Space