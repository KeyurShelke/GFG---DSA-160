Table of Content

[Naive Approach] Checking All Possible Overlaps – O(n^2) Time and O(n) Space
[Expected Approach] Checking Last Merged Interval – O(n*log(n)) Time and O(n) Space
[Alternate Approach] In-Place Merging – O(n*log(n)) time and O(1) space


[Naive Approach] Checking All Possible Overlaps – O(n^2) Time and O(n) Space
A simple approach is to group all the intervals by sorting them then start from the first 
interval and compare it with all other intervals for overlaps. If the first interval overlaps 
with any other interval, then remove the other interval from the list and merge the other into 
the first interval. Repeat the same steps for the remaining intervals after the first.


[Expected Approach] Checking Last Merged Interval – O(n*log(n)) Time and O(n) Space
In the previous approach, for each range we are checking for possible overlaps by iterating 
over all the remaining ranges till the end. We can optimize this by checking only those 
intervals that overlap with the last merged interval. Since the intervals will be sorted 
based on starting point, so if we encounter an interval whose starting time lies outside 
the last merged interval, then all further intervals will also lie outside it.

The intuition is to first sort the intervals based on their starting points. This allows us to
 easily identify overlapping intervals by comparing each interval with the last merged interval.
  Now, iterate over each interval and if the current interval overlaps with the last merged 
  interval, then merge them both. Otherwise, append the merged interval to the result.

[Alternate Approach] In-Place Merging – O(n*log(n)) time and O(1) space
The above solution requires O(n) space for sorting the merged intervals. We can avoid the 
extra space by doing merge operations in place.  

Follow the steps mentioned below to implement the approach:

Sort all intervals in increasing order of start time.
Traverse sorted intervals starting from the first interval, 
Do the following for every interval.
If the current interval is not the first interval and it overlaps with the previous interval, 
then merge it with the previous interval. Keep doing it while the interval overlaps with the 
previous one.         
If the current interval does not overlap with the previous interval, move to the next interval.