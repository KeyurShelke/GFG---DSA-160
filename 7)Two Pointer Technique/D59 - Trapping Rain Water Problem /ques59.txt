Trapping Rainwater Problem states that given an array of n non-negative integers arr[] representing an elevation map where the width of each bar is 1, compute how much water it can trap after rain.

Examples:  

Input: arr[] = [3, 0, 1, 0, 4, 0, 2]
Output: 10
Explanation: The expected rainwater to be trapped is shown in the above image.

Input: arr[] = [3, 0, 2, 0, 4]
Output: 7
Explanation: We trap 0 + 3 + 1 + 3 + 0 = 7 units.

Input: arr[] = [1, 2, 3, 4]
Output: 0
Explanation: We cannot trap water as there is no height bound on both sides

Table of Content

Observations
[Naive Approach] Find left and right max for each index - O(n^2) Time and O(1) Space
[Better Approach] Prefix and suffix max for each index - O(n) Time and O(n) Space
[Expected Approach] Using Two Pointers - O(n) Time and O(1) Space
[Alternate Approach] Using Stack - O(n) Time and O(n) Space